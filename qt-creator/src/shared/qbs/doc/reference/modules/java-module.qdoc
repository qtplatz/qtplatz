/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmltype java
    \inqmlmodule QbsModules
    \since Qbs 1.4

    \brief Provides Java support.

    The \c java module contains the properties and rules for building Java projects.

    \section2 Relevant File Tags
    \target filetags-java

    \table
    \header
        \li Tag
        \li Auto-tagged File Names
        \li Since
        \li Description
    \row
        \li \c{"java.class"}
        \li -
        \li 1.4
        \li This tag is attached to the output artifacts of the rule that runs the
            \c javac tool.
    \row
        \li \c{"java.jar"}
        \li -
        \li 1.4
        \li This tag is attached to the output artifacts of the rule that runs the
            \c jar tool.
    \row
        \li \c{"java.java"}
        \li \c{*.java}
        \li 1.4
        \li Source files with this tag serve as inputs to the rule running the \c javac tool.
    \row
        \li \c{"java.manifest"}
        \li \c{*.mf}
        \li 1.8
        \li The contents of files with this tag will be aggregated with the
            values in \l{java::}{manifest}.
    \endtable
*/

/*!
    \qmlproperty stringList java::additionalClassPaths

    The locations beside this product's class output path to consider when
    compiling.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList java::additionalCompilerFlags

    A list of compiler flags not covered by any of the properties in this
    module.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList java::additionalJarFlags

    A list of archiver flags not covered by any of the properties in this
    module.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList java::bootClassPaths

    A list of non-standard bootstrap class files.

    \nodefaultvalue
*/

/*!
    \qmlproperty string java::compilerFilePath

    The command to invoke when compiling Java sources.

    \defaultvalue \l compilerName, prefixed by \l jdkPath if it is defined.
*/

/*!
    \qmlproperty string java::compilerName

    The file name of the Java compiler.

    \defaultvalue \c{"javac"}
*/

/*!
    \qmlproperty bool java::enableWarnings

    Whether warnings are emitted when compiling Java sources.

    \defaultvalue \c true
*/

/*!
    \qmlproperty string java::interpreterFilePath

    The command to invoke when executing Java code.

    \defaultvalue \l interpreterName, prefixed by \l jdkPath if it is defined.
*/

/*!
    \qmlproperty string java::interpreterName

    The file name of the Java interpreter.

    \defaultvalue \c{"java"}
*/

/*!
    \qmlproperty string java::jarFilePath

    The command to run when creating or extracting \c jar files.

    \defaultvalue \l jarName, prefixed by \l jdkPath if it is defined.
*/

/*!
    \qmlproperty string java::jarName

    The file name of the \c jar tool.

    \defaultvalue \c{"jar"}
*/

/*!
    \qmlproperty pathList java::jdkIncludePaths
    \since Qbs 1.4.1

    A list of include paths for native header files.

    Applications using JNI to interface with native code should add these paths
    to \l{cpp::includePaths}{cpp.includePaths}.

    \defaultvalue Determined automatically.
*/

/*!
    \qmlproperty string java::jdkPath

    The base path of the Java Development Kit (JDK).

    This is equivalent to the \c JAVA_HOME environment variable, and by default
    will be determined automatically from one of the following:

    \list
        \li \c JAVA_HOME environment variable (all platforms)
        \li Registry (Windows)
        \li \c java_home tool (macOS)
        \li Known JDK paths (other Unix platforms)
    \endlist

    \defaultvalue Determined automatically.
*/

/*!
    \qmlproperty string java::languageVersion

    The Java language version to interpret source code as.

    If left undefined, the compiler will use its default.

    \nodefaultvalue
*/

/*!
    \qmlproperty string java::runtimeVersion

    The version of the Java runtime to generate compatible bytecode for.

    If left undefined, the compiler will use its default.

    \nodefaultvalue
*/

/*!
    \qmlproperty var java::manifest
    \since Qbs 1.4.2

    The properties to add to the manifest file when building a JAR.

    The contents of this property will be aggregated with the values from any
    files tagged \l{filetags-java}{"java.manifest"}.

    If this property and a manifest file contain the same key, this property
    will take precedence. If left undefined, this property will not be taken
    into account.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList java::manifestClassPath

    A list of entries to add to the manifest's Class-Path when building a JAR.

    \nodefaultvalue
*/

/*!
    \qmlproperty bool java::warningsAsErrors

    If this property is \c true, the compiler will abort where it would normally
    emit a warning.

    \defaultvalue \c false
*/
