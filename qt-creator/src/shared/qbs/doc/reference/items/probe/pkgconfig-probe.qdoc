/****************************************************************************
**
** Copyright (C) 2019 Ivan Komissarov (abbapoh@gmail.com)
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmltype PkgConfigProbe
    \inqmlmodule QbsProbes
    \ingroup list-of-items
    \keyword QML.PkgConfigProbe

    \brief Retrieves the information about installed packages using the pkg-config binary.

    This probe takes the package name or the list of package names as input and returns the
    information that is required to compile and link using those packages.

    Usually, you can simply use a Depends item as described in
    \l{How do I build against libraries that provide pkg-config files?}.

    Alternatively, the probe can be used directly as follows:

    \code
    CppApplication {
        name: project.name
        Probes.PkgConfigProbe {
            id: pkgConfig
            name: "QtCore"
            minVersion: '4.0.0'
            maxVersion: '5.99.99'
        }
        files: 'main.cpp'
        cpp.cxxFlags: pkgConfig.cflags
        cpp.linkerFlags: pkgConfig.libs
    }
    \endcode
*/

/*!
    \qmlproperty string PkgConfigProbe::sysroot

    This property sets the value of the \c PKG_CONFIG_SYSROOT_DIR environment variable passed to
    the \c pkg-config binary. This variable modifies -I and -L flags to use the directories located
    in target sysroot.

    This property is useful when cross-compiling packages that use \c pkg-config to determine CFLAGS
    and LDFLAGS. For example, if \c sysroot is set to \c /var/target, a \c -I/usr/include/libfoo
    will become \c -I/var/target/usr/include/libfoo.

    \defaultvalue \c qbs.sysroot
*/

/*!
    \qmlproperty string PkgConfigProbe::executable

    The name of or the path to the pkg-config executable.

    \defaultvalue "pkg-config"
*/

/*!
    \qmlproperty string PkgConfigProbe::name

    The name this probe. This property is used as
    \l{PkgConfigProbe::packageNames}{PkgConfigProbe.packageNames} value by default.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::packageNames

    The list of package names to pass to the pkg-config executable. For each package, pkg-config
    will return the information required to compile and link to this package.

    \defaultvalue [\l{PkgConfigProbe::name}{PkgConfigProbe.name}]
*/

/*!
    \qmlproperty string PkgConfigProbe::minVersion

    The minimum version of the required package. If set, pkg-config will ignore packages with
    version less than the value of this property.

    \nodefaultvalue
*/

/*!
    \qmlproperty string PkgConfigProbe::exactVersion

    The exact version of the required package. If set, pkg-config will ignore packages with
    version that is not equal to the value of this property.

    \nodefaultvalue
*/

/*!
    \qmlproperty string PkgConfigProbe::maxVersion

    The maximum version of the required package. If set, pkg-config will ignore packages with
    version greater than the value of this property.

    \nodefaultvalue
*/

/*!
    \qmlproperty bool PkgConfigProbe::forStaticBuild

    If \c true, pkg-config will return linker flags for a static linking instead of dynamic.

    \defaultvalue \c false
*/

/*!
    \qmlproperty stringList PkgConfigProbe::libDirs

    List of full, non-sysrooted paths where pkg-config should search for .pc files. This overrides
    the built-in path (which is usually /usr/lib/pkgconfig).

    This property sets the value of the \c PKG_CONFIG_LIBDIR environment variable passed to
    the \c pkg-config binary.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::cflags

    \internal

    This property contains the unparsed output from "pkg-config --cflags" call. Usually, you should
    use \l{PkgConfigProbe::defines}{PkgConfigProbe.defines},
    \l{PkgConfigProbe::includePaths}{PkgConfigProbe.includePaths} and
    \l{PkgConfigProbe::compilerFlags}{PkgConfigProbe.compilerFlags} properties instead.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::libs

    \internal

    This property contains the unparsed output from "pkg-config --libs" call. Usually, you should
    use \l{PkgConfigProbe::libraries}{PkgConfigProbe.libraries},
    \l{PkgConfigProbe::libraryPaths}{PkgConfigProbe.libraryPaths} and
    \l{PkgConfigProbe::linkerFlags}{PkgConfigProbe.linkerFlags} properties instead.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::defines

    This output property contains the list of defines that should be passed to a compiler when
    using requested package.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::libraries

    This output property contains the list of library names that should be passed to a linker when
    using requested package.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::libraryPaths

    This output property contains the list of library paths that should be passed to a linker when
    using requested package.

    This property sets the value of the PKG_CONFIG_LIBDIR environment variable passed to
    the \c pkg-config binary.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::includePaths

    This output property contains the list of include paths that should be passed to a compiler when
    using requested package.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::compilerFlags

    This output property contains the list of flags that should be passed to a compiler when
    using requested package.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::linkerFlags

    This output property contains the list of flags that should be passed to a linker when
    using requested package.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList PkgConfigProbe::modversion

    This output property contains the version of the found package.

    \nodefaultvalue
*/
