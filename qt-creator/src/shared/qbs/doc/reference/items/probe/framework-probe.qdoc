/****************************************************************************
**
** Copyright (C) 2019 Ivan Komissarov (abbapoh@gmail.com)
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmltype FrameworkProbe
    \inqmlmodule QbsProbes
    \ingroup list-of-items
    \keyword QML.FrameworkProbe
    \inherits PathProbe

    \brief Locates \macos frameworks outside the project.

    Finds \macos frameworks that have the specified file names.

    By default, FrameworkProbe searches for frameworks in \c ~/Library/Frameworks,
    \c /usr/local/lib, \c /Library/Frameworks, and in \c /System/Library/Frameworks.

    Also, if \l {qbs::sysroot}{qbs.sysroot} is specified (for example, when compiling using XCode
    SDK), the probe searches in the \c sysroot/System/Library/Frameworks folder first.

    For example, a simple FrameworkProbe that searches for the Foundation framework can be used as
    follows:

    \code
    import qbs.Probes
    Product {
        Depends { name: "cpp"; }
        Probes.FrameworkProbe {
            id: foundationProbe
            names: ["Foundation"]
        }
        cpp.frameworkPaths: foundationProbe.found ? [foundationProbe.path] : []
    }
    \endcode
*/
