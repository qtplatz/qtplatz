/****************************************************************************
**
** Copyright (C) 2020 Ivan Komissarov (abbapoh@gmail.com)
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmltype LibraryProbe
    \inqmlmodule QbsProbes
    \ingroup list-of-items
    \keyword QML.IncludeProbe
    \inherits PathProbe

    \brief Locates library files outside the project.

    On Windows, searches for library files within directories specified by the \c PATH environment
    variable.

    On Unix, searches for library files within directories specified by the \c LIBRARY_PATH
    environment variable, as well as in \c "/usr/lib" and \c "/usr/local/lib".

    On Linux, also searches in platform-specific directories, such as \c "/usr/lib64" and
    \c "/usr/lib/x86_64-linux-gnu".

    For example, LibraryProbe can be used to search for a \c zlib library as follows:

    \code
    import qbs.Probes

    CppApplication {
        Probes.LibraryProbe {
            id: zlibProbe
            names: "z"
        }
        cpp.libraryPaths: zlibProbe.found ? [zlibProbe.path] : []
        cpp.dynamicLibraries: zlibProbe.found ? [zlibProbe.names] : []
        files: 'main.cpp'
    }
    \endcode
*/
