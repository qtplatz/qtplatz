/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Copyright (C) 2019 Jochen Ulrich <jochenulrich@t-online.de>
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/
/*!
    \previouspage ApplicationExtension
    \nextpage CppApplication
    \qmltype AutotestRunner
    \inqmlmodule QbsConvenienceItems
    \ingroup list-of-items
    \keyword QML.AutotestRunner

    \brief Product that runs all autotests in the project.

    An AutotestRunner has a dependency on all \l{Product}{products} with the
    \l{Product::}{type} \c "autotest". Building the AutotestRunner product
    will then run the respective executables. The \l{Product::}{builtByDefault}
    property is set to \c false by default, so running the autotests
    has to be explicitly requested. The default name of the product is
    \c "autotest-runner".

    To use this feature:

    \list 1
        \li Attach the \c "autotest" type to your autotests:
            \code
            CppApplication {
                name: "tst_mytest"
                type: ["application", "autotest"]
                // ...
            }
            \endcode
        \li Instantiate exactly one AutotestRunner in your project, typically at
            the top level:
            \code
            Project {
                // ...
                AutotestRunner { }
                // ...
            }
            \endcode
        \li Trigger the autotest execution by building the product:
            \code
            qbs build -p autotest-runner
            \endcode
    \endlist


    \section2 Setting Properties for individual Tests
    \target autotestrunner-autotest-module

    To control the behavior of individual tests, some properties of the \c AutotestRunner
    can be overridden by depending on the \l autotest module and setting its properties:

    \code
    CppApplication {
        name: "tst_mytest"
        type: ["application", "autotest"]

        Depends { name: "autotest" }

        autotest.timeout: 60

        // ...
    }
    \endcode


    \section2 Relevant Job Pools
    \target autotestrunner-job-pools

    \table
    \header
        \li Pool
        \li Since
        \li Description
    \row
        \li \c{"autotest-runner"}
        \li 1.15
        \li The job pool used to run the tests.
    \endtable

*/

/*!
    \qmlproperty stringList AutotestRunner::arguments

    The list of arguments to invoke the autotest with.
    A test can override this by setting the \l{autotest::arguments}{arguments} property
    of the \l autotest module.

    \defaultvalue \c []
*/

/*!
    \qmlproperty stringList AutotestRunner::auxiliaryInputs

    This property can contain arbitrary file tags. The AutotestRunner will get dependencies
    on all products whose type matches at least one of these tags, and invocation of the
    test executables will happen only after all of the respective artifacts have been built.
    Set this property if your test executables have run-time dependencies on other products.

    \nodefaultvalue
    \since Qbs 1.12
*/

/*!
    \qmlproperty stringList AutotestRunner::environment

    A list of environment variables that are added to the run environment.
    They are provided as a list of strings in the form \c "varName=value".

    \defaultvalue DYLD_LIBRARY_PATH, DYLD_FRAMEWORK_PATH, and DYLD_ROOT_PATH
    are set on macOS, or an empty list for other platforms.
*/

/*!
    \qmlproperty bool AutotestRunner::limitToSubProject

    By default, only those autotests are considered that are in the same sub-project that
    AutotestRunner was instantiated in. If you want to run all autotests regardless
    of their location in the project hierarchy, set this property to \c false.

    \defaultvalue \c true
*/

/*!
    \qmlproperty string AutotestRunner::workingDir

    If this property is set, it will be the working directory for all invoked test executables.
    Otherwise, the working directory will the the parent directory of the respective executable.
    A test can override this by setting the \l{autotest::workingDir}{workingDir} property
    of the \l autotest module.

    \nodefaultvalue
    \since Qbs 1.12
*/

/*!
    \qmlproperty stringList AutotestRunner::wrapper

    Wrapper binary and its arguments for wrapping autotest calls.
    This is useful for tools like Valgrind and alike.

    \defaultvalue empty
*/

/*!
    \qmlproperty int AutotestRunner::timeout

    Time limit for the execution of the individual tests. If a test does not finish within
    the time limit, the test is cancelled and considered failed. A value below or equal to 0
    means no timeout.
    A test can override this by setting the \l{autotest::timeout}{timeout} property
    of the \l autotest module.

    \defaultvalue -1
    \since Qbs 1.15
*/
