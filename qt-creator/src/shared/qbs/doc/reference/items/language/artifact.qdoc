/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qbs.
**
** $QT_BEGIN_LICENSE:FDL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU Free Documentation License Usage
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file. Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: https://www.gnu.org/licenses/fdl-1.3.html.
** $QT_END_LICENSE$
**
****************************************************************************/
/*!
    \nextpage Depends
    \ingroup list-of-language-items
    \qmltype Artifact
    \inqmlmodule QbsLanguageItems
    \ingroup list-of-items
    \keyword QML.Artifact

    \brief Describes a file produced by a Rule.

    An Artifact represents a single file produced by a \l{Rule}.

    For example, if a rule produces three files, it needs to contain three
    Artifact items.

    In addition to Artifact properties, you can set module properties within an
    Artifact item, as follows:

    \code
    Artifact {
        filePath: "somefile.cpp"
        fileTags: ["cpp"]
        cpp.cxxLanguageVersion: "c++11"
        // ...
    }
    \endcode

    \note The code on the right-hand side of Artifact properties has access to
    the set of input artifacts. That is, it can refer to the \c inputs map and,
    if the rule is not a multiplex rule, the \c input variable.
*/

/*!
    \qmlproperty bool Artifact::alwaysUpdated

    Setting this property to \c false means the file is not necessarily always
    written to by any command run by the rule.
    If all artifacts of a rule have this property set to \c false, the commands
    of the rule are only executed if all of them are out of date compared to the inputs.

    \defaultvalue \c true
*/

/*!
    \qmlproperty string Artifact::filePath

    The file path of the target artifact.

    \nodefaultvalue
*/

/*!
    \qmlproperty stringList Artifact::fileTags

    A list of tags to attach to the target file. These can then be matched by a
    \l{Rule}.

    \defaultvalue An empty list
*/
