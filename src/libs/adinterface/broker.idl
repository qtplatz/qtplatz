// This is a -*- C++ -*- header.
//////////////////////////////////////////
// Copyright (C) 2013 MS-Cheminformatics LLC
// Copyright (C) 2010-2013 Toshinobu Hondo, Ph.D.
//
// MS-Cheminformatics LLC / Advanced Instrumentation Project
//
// build setup
// $(ACE_ROOT)\bin\tao_idl -Wb,pre_include=ace/pre.h -Wb,post_include=ace/post.h -I$(TAO_ROOT) $(InputPath)
//////////////////////////////////////////

interface LogHandler;
interface BrokerEventSink;
#include "signalobserver.idl"
#include "controlmethod.idl"

module Broker {

   typedef sequence< string > args_type;

    struct LogMessage {
        unsigned long logId;
        long priority;
        long long tv_sec;
        long tv_usec;
        string msgId;
        string srcId;
        string text;
        args_type args;
    };

    interface Session {
        boolean connect( in string user, in string pass, in string token, in BrokerEventSink cb );
        boolean disconnect( in BrokerEventSink cb );
		boolean coaddSpectrum( in string token, in SignalObserver::Observer observer, in double x1, in double x2 );
    };

    interface Logger {
        exception AlreadyExist {
            string reason_;
        };
        void log( in LogMessage msg );

        boolean findLog( in unsigned long logId, inout LogMessage msg );
        boolean nextLog( inout LogMessage msg );
        string to_string( in LogMessage msg );

        boolean register_handler( in LogHandler handler );
        boolean unregister_handler( in LogHandler handler );
    };

    interface ObjectReceiver {
        oneway void object_discovered( in string name, in string ior ); 
    };

    typedef sequence< Object > Objects;

    interface Manager {
        void register_ior( in string name, in string ior );
        string ior( in string name );

        // registor object name that will discover by object_discovery
        void register_lookup( in string name, in string ident );

        boolean register_object( in string name, in Object obj );
        Object find_object( in string regex );
        Objects find_objects( in string regex );

        boolean register_handler( in ObjectReceiver cb );
        boolean unregister_handler( in ObjectReceiver cb );
        Session getSession( in string connStr );
        Logger getLogger();


        void shutdown();
    };

};
