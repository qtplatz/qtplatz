/**************************************************************************
** Copyright (C) 2010-2011 Toshinobu Hondo, Ph.D.
** Copyright (C) 2013 MS-Cheminformatics LLC
*
** Contact: toshi.hondo@scienceliaison.com
**
** Commercial Usage
**
** Licensees holding valid MS-Cheminformatics commercial licenses may use this
** file in accordance with the MS-Cheminformatics Commercial License Agreement
** provided with the Software or, alternatively, in accordance with the terms
** contained in a written agreement between you and MS-Cheminformatics.
**
** GNU Lesser General Public License Usage
**
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.TXT included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
**************************************************************************/

module ControlMethod {

    typedef sequence<octet> octet_array;

    enum eDeviceCategory {
        device_unknown
        , device_sampler               // autosampler or anything prepare sample (trigger injection)
        , device_gas_chromatograph     // just GC w/ or w/o injector
        , device_liquid_chromatograph  // degasser, pump, gradienter, oven (sync to an injection)
        , device_detector              // LC/GC detectors including MS
    };
    
    struct MethodLine {                // corresponding to adcontrols::controlmethod::MethodItem
        string modelname;
        string description;
        unsigned long unitnumber;     // uint32_t
        boolean isInitialCondition;
        double time;
        unsigned long funcid;         // uint32_t device dependent
        string itemlabel;             // short description for funcid
        octet_array xdata;            // device dependent serialized data
    };

    typedef sequence< MethodLine > method_sequence;

    struct Method {
        string subject;
        string description;
        method_sequence lines;
    };

    interface ControlMethodInterface {
        // dummy interface in order to supress link error
    };
    
};
