diff -Naur ../acqiris.orig/kernel26module/module/acqiris-dma.c kernel26module/module/acqiris-dma.c
--- ../acqiris.orig/kernel26module/module/acqiris-dma.c	2010-03-24 00:10:27.000000000 +0900
+++ kernel26module/module/acqiris-dma.c	2015-06-29 20:03:55.463155931 +0900
@@ -57,7 +57,7 @@
 #include <linux/cdev.h>
 #include <linux/device.h>
 #include <linux/types.h>
-
+#include <linux/sched.h>
 #include <asm/uaccess.h>
 
 #include "acqiris.h"
diff -Naur ../acqiris.orig/kernel26module/module/acqiris.h kernel26module/module/acqiris.h
--- ../acqiris.orig/kernel26module/module/acqiris.h	2010-03-24 00:10:27.000000000 +0900
+++ kernel26module/module/acqiris.h	2015-06-29 19:38:21.839551102 +0900
@@ -218,8 +218,8 @@
 int acqiris_open(struct inode* inodeP, struct file* fileP);
 int acqiris_release(struct inode* inodeP, struct file* fileP);
 
-int __devinit acqiris_device_probe(struct pci_dev *devP, const struct pci_device_id *idDevP);
-void __devexit acqiris_device_remove(struct pci_dev *devP);
+int /* __devinit */ acqiris_device_probe(struct pci_dev *devP, const struct pci_device_id *idDevP);
+void /* __devexit */ acqiris_device_remove(struct pci_dev *devP);
 
 long acqiris_config_operation(struct file* fileP, u32 cmd, struct acqiris_ioop *ioop);
 long acqiris_user_operation(struct file* fileP, u32 cmd, struct acqiris_ioop *ioop);
diff -Naur ../acqiris.orig/kernel26module/module/acqiris-init.c kernel26module/module/acqiris-init.c
--- ../acqiris.orig/kernel26module/module/acqiris-init.c	2010-03-24 00:10:27.000000000 +0900
+++ kernel26module/module/acqiris-init.c	2015-06-29 19:39:19.415836607 +0900
@@ -319,7 +319,7 @@
 }
 
 //////////////////////////////////////////////////////////////////////////////////////////
-int __devinit acqiris_device_probe(struct pci_dev *pci_dev, const struct pci_device_id *pci_id)
+int /* __devinit */ acqiris_device_probe(struct pci_dev *pci_dev, const struct pci_device_id *pci_id)
 {
     struct acqiris_device* aq_dev;
     struct page *page;
@@ -445,7 +445,7 @@
 
 
 //////////////////////////////////////////////////////////////////////////////////////////
-void __devexit acqiris_device_remove(struct pci_dev *pci_dev)
+void /* __devexit */ acqiris_device_remove(struct pci_dev *pci_dev)
 {
     struct acqiris_device *aq_dev;
     struct page *page;
diff -Naur ../acqiris.orig/kernel26module/module/acqiris-ioctl.c kernel26module/module/acqiris-ioctl.c
--- ../acqiris.orig/kernel26module/module/acqiris-ioctl.c	2010-03-24 00:10:27.000000000 +0900
+++ kernel26module/module/acqiris-ioctl.c	2015-06-29 20:03:07.790919537 +0900
@@ -58,9 +58,17 @@
 #include <linux/device.h>
 #include <linux/types.h>
 #include <asm/uaccess.h>
+#include <linux/sched.h>
 
 #include "acqiris.h"
 
+#if HAVE_UNLOCKED_IOCTL
+# include <linux/mutex.h>
+#else
+# include <linux/smp_lock.h>
+#endif
+
+static DEFINE_MUTEX( fs_mutex );
 
 //////////////////////////////////////////////////////////////////////////////////////////
 int acqiris_dma_read(struct acqiris_device* aq_dev, u32 local_addr, void __user *dest, size_t size);
@@ -110,7 +118,11 @@
     unsigned long out_buf;
     unsigned long ret_size;
 
+#if HAVE_UNLOCKED_IOCTL
+    mutex_lock(&fs_mutex);
+#else
     lock_kernel();
+#endif
 
     get_user(in_buf, &user_io->inBufferP);
     get_user(ioop.in_size, &user_io->nInBufferSize);
@@ -127,7 +139,11 @@
     put_user(ioop.ret_size, (unsigned int __user *)ret_size);
     put_user(ioop.err_code, &user_io->errorCode);
 
+#if HAVE_UNLOCKED_IOCTL
+    mutex_unlock(&fs_mutex);
+#else
     unlock_kernel();
+#endif
 
     return ioop.err_code;
 }
