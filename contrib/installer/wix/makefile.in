#!nmake
##################################################
# Makefile for QtPlatz
#
# Copyright (C) 2010-2015 Toshinobu Hondo, Ph.D.
# Author: Toshinobu Hondo
#
######################################
SH	= CMD.EXE
TOP    	= ..

BUILD = release_build
MSIFILE = @MSIFILE@
QTPLATZ_SOURCE_DIR = @QTPLATZ_SOURCE_DIR@
QTPLATZ_BINARY_DIR = @QTPLATZ_BINARY_DIR@

INFITOF_SOURCE_DIR = @INFITOF_SOURCE_DIR@
INFITOF_BINARY_DIR = @INFITOF_BINARY_DIR@

STAGEDIR = @STAGEDIR@

CANDLE = "$(WIX)bin\Candle.exe"
LIGHT = "$(WIX)\bin\Light.exe"
LIT = "$(WIX)\bin\Lit.exe"
DARK = "$(WIX)\bin\Dark.exe"
HEAT = "$(WIX)\bin\Heat.exe"
MELT = "$(WIX)\bin\Melt.exe"
TORCH = "$(WIX)\bin\Torch.exe"
SMOKE = "$(WIX)\bin\Smoke.exe"
PYRO = "$(WIX)\bin\Pyro.exe"

## following 3 commands are workaround where if PATH for cygwin/bin kind exists
RM	= $(SH) /c del
CP	= $(SH) /c copy
MD      = $(SH) /c mkdir

OBJS = qtplatz.wixobj translations.wixobj plugins.wixobj qt.wixobj vc120.wixobj bruker.wixobj qtplatz_translations.wixobj \
	qtplatz_xslt.wixobj qtplatz_plugins.wixobj qtplatz_bin.wixobj

all: $(MSIFILE)

world: qtplatz infitof $(MSIFILE)

help:
	@echo "*	make world	will do full rebuild qtplatz, and generate .MSI setup"
	@echo "*	make harvest	make translations; make qt; and make plugins' for update .wxi files from scratch"
	@echo "*	make all	make .msi from existing binary"
	@echo "*	make clean	cleans up current dir"
	@echo "*	make veryclean	CAUTION this cleans all fules according to git repository. == This makes a state right after clean git clone."

clean:
	$(RM) /S /F /Q
	$(RM) *.msi *.wixobj *.wixpdb *.zip *.bat *.exe *.obj *~

destclean:
	-@rm -rf $(QTPLATZ_BINARY_DIR)
	-@rm -rf $(INFITOF_BINARY_DIR)

veryclean: clean
	cd $(QTPLATZ_SOURCE_DIR)
	git clean -d -x -f
	cd $(MAKEDIR)
	cd $(INFITOF_SOURCE_DIR)
	git clean -d -x -f
	cd $(MAKEDIR)

qtplatz:
	-@$(MD) $(QTPLATZ_BINARY_DIR)
	cd $(QTPLATZ_BINARY_DIR)
	cmake -G "Visual Studio 12 Win64" $(QTPLATZ_SOURCE_DIR)
	cd $(MAKEDIR)
	msbuild $(QTPLATZ_BINARY_DIR)\qtplatz.sln /m /t:Build /p:Configuration=Release

infitof:
	-@$(MD) $(INFITOF_BINARY_DIR)
	cd $(INFITOF_BINARY_DIR)
	cmake -G "Visual Studio 12 Win64" -DQTPLATZ_BUILD_DIR=$(QTPLATZ_BINARY_DIR) $(INFITOF_SOURCE_DIR)
	cd $(MAKEDIR)
	msbuild $(INFITOF_BINARY_DIR)\infitof.sln /m /t:Build /p:Configuration=Release

$(MSIFILE): version.wxi $(OBJS)
	$(LIGHT) -cultures:en-US -ext WixUIExtension.dll $(OBJS) -o $@

sign:
	signtool sign /t http://timestamp.digicert.com /a $(MSIFILE)

qtplatz.wixobj: version.wxi qtplatz.wxs
	$(CANDLE) -dInfiTOFDir=$(INFITOF_SOURCE_DIR) -dTOP=$(QTPLATZ_SOURCE_DIR) qtplatz.wxs

qtplatz_plugins.wixobj: qtplatz_plugins.wxi
	$(CANDLE) -dSourceDir=$(QTPLATZ_BINARY_DIR)\lib\qtplatz\plugins qtplatz_plugins.wxi

qtplatz_bin.wixobj: qtplatz_bin.wxi
	$(CANDLE) -dSourceDir=$(QTPLATZ_BINARY_DIR)\bin qtplatz_bin.wxi

translations.wixobj: translations.wxi
	$(CANDLE) -dQtTranslationsDir=$(QTDIR)\translations translations.wxi

qtplatz_translations.wixobj: qtplatz_translations.wxi
	$(CANDLE) -dSourceDir=$(QTPLATZ_BINARY_DIR)\share\qtplatz\translations qtplatz_translations.wxi

qtplatz_xslt.wixobj: qtplatz_xslt.wxi
	$(CANDLE) -dSourceDir=$(QTPLATZ_BINARY_DIR)\share\qtplatz\xslt qtplatz_xslt.wxi

plugins.wixobj: plugins.wxi
	$(CANDLE) -dQtPluginsDir=$(QTDIR)\plugins plugins.wxi

qt.wixobj: qt.wxi 
	$(CANDLE) -dQtBinDir=$(QTDIR)\bin qt.wxi

vc120.wixobj: vc120.wxi 
	$(CANDLE) -dSourceDir="$(VCINSTALLDIR)\redist\x64\Microsoft.VC120.CRT" vc120.wxi

bruker.wixobj: bruker.wxi 
	$(CANDLE) -dSourceDir="$(QTPLATZ_SOURCE_DIR)\..\Bruker Daltonik\3.1.2" bruker.wxi

#harvest: qt plugins translations qtplatz_translations bruker

qtplatz_plugins.wxi: makefile
	$(HEAT) dir $(QTPLATZ_BINARY_DIR)\lib\qtplatz\plugins \
	-dr LIB_PLUGINS -cg QtPlatzPluginsComponents -sfrag -gg -g1 -sf -srd -var "var.SourceDir" \
	-t qzplugin.xslt -o $@

qtplatz_bin.wxi: makefile
	$(HEAT) dir $(QTPLATZ_BINARY_DIR)\bin \
	-dr BIN -cg QtPlatzComponents -sfrag -gg -g1 -sf -srd -var "var.SourceDir" \
	-t x64transform.xslt -o $@

qtplatz_xslt.wxi: makefile
	$(HEAT) dir $(QTPLATZ_BINARY_DIR)\share\qtplatz\xslt \
	-dr XSLT -cg QtPlatzXSLT -sfrag -gg -g1 -sf -srd -var "var.SourceDir" \
	-t xslt.xslt -o $@

qtplatz_translations.wxi: makefile
	$(HEAT) dir $(QTPLATZ_BINARY_DIR)\share\qtplatz\translations \
	-dr TRANSLATIONS -cg QtPlatzTranslations -sfrag -gg -g1 -sf -srd -var "var.SourceDir" \
	-t qm.xslt -o qtplatz_translations.wxi

translations.wxi: makefile
	$(HEAT) dir $(QTDIR)\translations \
	-dr TRANSLATIONS -cg QtTranslations -sfrag -gg -g1 -sf -srd -var "var.QtTranslationsDir" \
	-t x64transform.xslt -o translations.wxi

plugins.wxi: makefile
	$(HEAT) dir $(STAGEDIR)\plugins \
	-dr PLUGINS -cg QtPluginsComponents -sfrag -gg -g1 -sf -srd -var "var.QtPluginsDir" \
	-t x64transform.xslt -o plugins.wxi

qt.wxi: makefile
	$(HEAT) dir $(QTDIR)\bin \
	-dr BIN -cg QtComponents -sfrag -gg -g1 -sf -srd -var "var.QtBinDir" -t qt.xslt -o qt.wxi

vc120.wxi: makefile
	$(HEAT) dir "$(VCINSTALLDIR)redist\x64\Microsoft.VC120.CRT" \
	-dr BIN -cg MicrosoftComponents -sfrag -gg -g1 -sf -srd -var "var.SourceDir" \
	-t x64transform.xslt -o vc120.wxi

bruker.wxi: makefile
	$(HEAT) dir "C:\Program Files (x86)\Bruker Daltonik\3.1.2" \
	-dr LIB_BRUKER -cg BrukerComponents -sfrag -gg -g1 -sf -srd -var "var.SourceDir" \
	-t x64transform.xslt -o bruker.wxi

